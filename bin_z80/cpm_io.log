0000:           ;zasm -v2 -i cpm_io.asm -o cpm_io.rom
0000:           ;#target bin
0000:           ; SYMBOLIC DEFINES
0000:           ; $8x selects the UART addressing lines
0000:           UART_PORT	equ 80h	; The UART's data buffer for in/out
0000:           UART_DLL	equ	80h	; LSB of divisor latch
0000:           UART_DLM	equ 81h	; MSB of divisor latch (DLAB=1)
0000:           UART_FCR	equ	82h	; FIFO control register
0000:           UART_IER	equ	81h	; Interrupt Enable register (DLAB=0)
0000:           UART_LCR	equ	83h	; Line Control Register
0000:           UART_MCR	equ 84h	; Modem Control Register (for OUT1/OUT2)
0000:           UART_LSR	equ	85h	; Line Status Register (used for transmitter empty bit)
0000:           
0000:           #target	rom		; ((inserted by zasm))
0000:           #code	0,$10000	; ((inserted by zasm))
0000:               org 0
0000: D300          out (0), A
0002:               ;Ensure is at memory address 5, for CP/M BDOS
0002: 000000        defs 5-$, 0
0005: F5            PUSH AF
0006: 79            ld a, c
0007: FE02          cp 2
0009: CC1300        call z, outchar
000C: FE09          cp 9
000E: CC2000        call z, outmulti
0011: F1            POP AF
0012: C9            ret
0013:           outchar:
0013: F5            PUSH AF
0014: BB            cp A, E
0015: D380          OUT (UART_PORT), A
0017:           ; wait until transmitted
0017:           oloop:
0017: DB85          IN A, (UART_LSR)	; read LSR
0019: CB77          BIT 6, A	; bit 6 is transmitter empty
001B: CA1700        JP Z, oloop
001E: F1            POP AF
001F: C9            RET
0020:           outmulti:
0020: 1A            ld a, (de)
0021: FE24          cp a, '$'
0023: CA2D00        jp z, outend
0026: CD1300        call outchar
0029: 13            inc de
002A: C32000        jp outmulti
002D:           outend:
002D: C9            ret
002E:           #end			; ((inserted by zasm))
